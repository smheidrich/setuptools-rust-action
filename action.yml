name: 'setuptools-rust'
description: 'Build setuptools-rust packages using cibuildwheel'
inputs:
  dummy-input:
    description: 'Dummy input'
    required: false
    default: 'dummy'
outputs:
  dummy-output:
    description: 'Dummy output'
    value: 42
runs:
  using: "composite"
  steps:
    - name: Restore mtimes of files in repo
      uses: chetan/git-restore-mtime-action@v1.2
    - name: Cargo home cache
      uses: actions/cache@v2
      env:
        cache-name: cargo-home
      with:
        path: ~/cargo-home-dirs
        key: ${{ env.cache-name }}-${{ runner.os }}-v9.2
        restore-keys: |
          ${{ env.cache-name }}-${{ runner.os }}-v9.
    - name: Rust build cache
      uses: actions/cache@v2
      env:
        cache-name: rust-build
      with:
        path: ~/cargo-target-dirs
        key: ${{ env.cache-name }}-${{ runner.os }}-v9.2-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ env.cache-name }}-${{ runner.os }}-v9.
    - name: Save env vars for cibuildwheel
      run: >
        echo "MAIN_DIR=$PWD" >> "$GITHUB_ENV";
        echo "OUTER_HOME=$HOME" >> "$GITHUB_ENV";
        cat "$GITHUB_ENV"
      shell: bash
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.10.2
      env:
        CIBW_SKIP: >
          *musllinux*
        CIBW_ENVIRONMENT_LINUX: >
          ACTION_SCRIPTS_DIR="/host/${{ github.action_path }}"
          HOST_HOME_DIR="/host/${{ env.OUTER_HOME }}"
          HOST_PROJ_DIR="/host/${{ env.MAIN_DIR }}"
          PROJ_DIR="/project"
          PATH="/host/${{ env.OUTER_HOME }}/.cargo/bin:$PATH"
          CARGO_HOME="/host/${{ env.OUTER_HOME }}/.cargo"
          RUSTUP_HOME="/host/${{ env.OUTER_HOME }}/.rustup"
          CARGO_TARGET_DIR="/host/${{ env.OUTER_HOME }}/target"
          CARGO_LOG="cargo::core::compiler::fingerprint=info"
          HOST_HOME_DIR_UNIX="/host/${{ env.OUTER_HOME }}"
          CARGO_HOME_UNIX="/host/${{ env.OUTER_HOME }}/.cargo"
          RUSTUP_HOME_UNIX="/host/${{ env.OUTER_HOME }}/.rustup"
        CIBW_ENVIRONMENT_MACOS: >
          ACTION_SCRIPTS_DIR="$GITHUB_ACTION_PATH"
          HOST_HOME_DIR="$HOME"
          HOST_PROJ_DIR="$GITHUB_WORKSPACE"
          PROJ_DIR="$GITHUB_WORKSPACE"
          PATH="$HOME/.cargo/bin:$PATH"
          CARGO_HOME="$HOME/.cargo"
          RUSTUP_HOME="$HOME/.rustup"
          CARGO_TARGET_DIR="$HOME/target"
          CARGO_LOG="cargo::core::compiler::fingerprint=info"
          HOST_HOME_DIR_UNIX="$HOME"
          CARGO_HOME_UNIX="$HOME/.cargo"
          RUSTUP_HOME_UNIX="$HOME/.rustup"
        CIBW_ENVIRONMENT_WINDOWS: >
          ACTION_SCRIPTS_DIR="$GITHUB_ACTION_PATH"
          HOST_HOME_DIR="$HOME"
          HOST_PROJ_DIR="$GITHUB_WORKSPACE"
          PROJ_DIR="$GITHUB_WORKSPACE"
          PATH="$HOME\\.cargo\\bin;$PATH"
          CARGO_HOME="$HOME\\.cargo"
          RUSTUP_HOME="$HOME\\.rustup"
          CARGO_TARGET_DIR="$HOME\\target"
          CARGO_LOG="cargo::core::compiler::fingerprint=info"
          HOST_HOME_DIR_UNIX="${{ env.OUTER_HOME }}"
          CARGO_HOME_UNIX="${{ env.OUTER_HOME }}/.cargo"
          RUSTUP_HOME_UNIX="${{ env.OUTER_HOME }}/.rustup"
        CIBW_ARCHS_MACOS: "x86_64 arm64"
        CIBW_BEFORE_BUILD_LINUX: >
          bash $ACTION_SCRIPTS_DIR/before-build-linux.sh
        CIBW_BEFORE_BUILD_MACOS: >
          bash $ACTION_SCRIPTS_DIR/before-build-mac.sh
        CIBW_BEFORE_BUILD_WINDOWS: >
          bash %ACTION_SCRIPTS_DIR%/before-build-win.sh
        CIBW_REPAIR_WHEEL_COMMAND_LINUX: >
          auditwheel repair -w {dest_dir} {wheel};
          bash $ACTION_SCRIPTS_DIR/after-build.sh
        CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: >
          cp {wheel} {dest_dir} &
          bash %ACTION_SCRIPTS_DIR%/after-build.sh
        CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
          delocate-listdeps {wheel} && delocate-wheel --require-archs \
          {delocate_archs} -w {dest_dir} {wheel};
          bash $ACTION_SCRIPTS_DIR/after-build.sh
        CIBW_BUILD_VERBOSITY: 1
    - uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl
